{"version":3,"sources":["Firebase.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Items.js","components/Show.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","orders","forEach","doc","_doc$data","data","menu","total","customer","push","key","id","setState","ref","firestore","collection","unsubscribe","state","onSnapshot","react_default","a","createElement","className","Link","to","map","order","index","Component","Boolean","window","location","hostname","match","Create","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","add","then","docRef","history","catch","error","console","_this$state2","htmlFor","type","placeholder","Show","_this2","params","get","exists","isLoading","log","_this3","delete","concat","onClick","bind","ReactDOM","render","BrowserRouter","Route","exact","path","component","Edit","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0450c5a8.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst settings = {};\n\nconst config = {\n    apiKey: \"AIzaSyDTztKAptjQ6yKkh9TaFlk5-5JDOavrQo4\",\n    authDomain: \"burgerqueenscl7.firebaseapp.com\",\n    databaseURL: \"https://burgerqueenscl7.firebaseio.com\",\n    projectId: \"burgerqueenscl7\",\n    storageBucket: \"burgerqueenscl7.appspot.com\",\n    messagingSenderId: \"276130762392\"\n};\nfirebase.initializeApp(config);\n\nfirebase.firestore().settings(settings);\n\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport firebase from './Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('orders');\n    this.unsubscribe = null;\n    this.state = {\n      orders: []\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const orders = [];\n    querySnapshot.forEach((doc) => {\n      const { menu, total, customer } = doc.data();\n      orders.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        menu,\n        total,\n        customer,\n      });\n    });\n    this.setState({\n      orders\n   });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <h3 className=\"panel-title\">\n              Lista de clientes\n            </h3>\n          </div>\n          <div className=\"panel-body\">\n            <h4><Link to=\"/create\" className=\"btn btn-primary\">Agregar cliente</Link></h4>\n            <table className=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Cliente</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.orders.map((order, index) =>\n                  <tr id={\"list-\"+index}>\n                    <td>{order.customer}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.ref = firebase.firestore().collection('orders');\n    this.state = {\n      menu: '',\n      total: '',\n      customer: ''\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { menu, total, customer } = this.state;\n\n    this.ref.add({\n      menu,\n      total,\n      customer\n    }).then((docRef) => {\n      this.setState({\n        menu: '',\n        total: '',\n        customer: ''\n      });\n      this.props.history.push(\"/\")\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    const { menu, total, customer } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <h3 className=\"panel-title\">\n              Editar orden\n            </h3>\n          </div>\n          <div className=\"panel-body\">\n            <h4><Link to=\"/\" className=\"btn btn-primary\">Lista de ordenes</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Menu:</label>\n                <input type=\"text\" className=\"form-control\" name=\"menu\" value={menu} onChange={this.onChange} placeholder=\"Orden\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Total:</label>\n                <input type=\"text\" className=\"form-control\" name=\"total\" onChange={this.onChange} placeholder=\"Total\" value={total} />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"author\">Cliente:</label>\n                <input type=\"text\" className=\"form-control\" name=\"customer\" value={customer} onChange={this.onChange} placeholder=\"Cliente\" />\n              </div>\n              <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Items from './Items'\n\nclass Create extends Component {\n\n    constructor() {\n        super();\n        this.ref = firebase.firestore().collection('orders');\n        this.state = {\n            menu: '',\n            total: '',\n            customer: ''\n        };\n    }\n    onChange = (e) => {\n        const state = this.state\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { menu, total, customer } = this.state;\n\n        this.ref.add({\n            menu,\n            total,\n            customer\n        }).then((docRef) => {\n            this.setState({\n                menu: '',\n                total: '',\n                customer: ''\n            });\n            this.props.history.push(\"/\")\n        })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n    render() {\n        const { menu, total, customer } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Nuevo cliente</h2>\n                    </div>\n                </div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"cliente\">Cliente:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"cliente\" name=\"customer\" onChange={this.onChange} placeholder=\"Cliente\" value={customer} />\n                    </div>\n                    <div className=\"row\">\n                        <div className='col'>\n                            <h4><Link to=\"/\" className=\"btn btn-primary\">Lista de clientes</Link></h4>\n                        </div>\n                        <div className=\"col\">\n                            <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport firebase from '../Firebase';\n\nclass Items extends Component {\n  constructor(props) {\n    super(props);\n    this.breakfast = firebase.firestore().collection('items').doc('desayuno');\n    this.lunch = firebase.firestore().collection('items').doc('dia')\n    this.unsubscribe = null;\n    this.state = {\n      breakfastItems: [],\n      lunchItems: [],\n    };\n  };\n\n  componentDidMount() {\n    this.unsubscribe = this.breakfast.get()\n      .then((doc) => {\n        let eachItem = Object.entries(doc.data())\n        this.setState({ breakfastItems: eachItem });\n      })\n      .catch(console.error);\n    this.unsubscribe = this.lunch.get()\n      .then((doc) => {\n        let eachItem = Object.entries(doc.data())\n        this.setState({ lunchItems: eachItem });\n      })\n  };\n\n  render() {\n    return (\n      console.log(this.state),\n      <div className=\"container\">\n        <div className=\"row\">\n          {this.state.breakfastItems.map((order, index) =>\n            <div >\n              <button type=\"button\" id={\"item-\" + index} className=\"btn btn-secondary order\">{order[0]} {order[1]}</button>\n            </div>\n          )}\n        </div>\n        <div className=\"row\">\n          {this.state.lunchItems.map((order, index) =>\n            <div >\n              <button type=\"button\" id={\"lunch-\" + index} className=\"btn btn-secondary order\">{order[0]} {order[1]}</button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Items;\n","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: {},\n      key: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('orders').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        this.setState({\n          order: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  delete(id){\n    firebase.firestore().collection('orders').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\")\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n          <h4><Link to=\"/\">Board List</Link></h4>\n            <h3 className=\"panel-title\">\n              {this.state.order.menu}\n            </h3>\n          </div>\n          <div className=\"panel-body\">\n            <dl>\n              <dt>Total:</dt>\n              <dd>{this.state.order.total}</dd>\n              <dt>Cliente:</dt>\n              <dd>{this.state.order.customer}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.key}`} className=\"btn btn-success\">Edit</Link>&nbsp;\n            <button onClick={this.delete.bind(this, this.state.key)} className=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\n\nReactDOM.render(\n    <Router>\n        <div className=\"sheet\">\n          <Route exact path='/' component={App} />\n          <Route path='/edit/:id' component={Edit} />\n          <Route path='/create' component={Create} />\n          <Route path='/show/:id' component={Show} />\n        </div>\n    </Router>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();"],"sourceRoot":""}